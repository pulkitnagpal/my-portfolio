{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/pulkitnagpal/Desktop/personal-projects/portfolio/pages/index.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useEffect, useState } from \"react\";\nimport Header, { HEADERLINKS } from \"../components/Header\";\nimport Button from \"../components/Button\";\n\nvar AboutMe = function AboutMe() {\n  _s();\n\n  var _useState = useState(false),\n      showDetails = _useState[0],\n      setShowDetails = _useState[1];\n\n  useEffect(function () {\n    var elements = document.getElementsByClassName(\"typewrite\");\n\n    for (var i = 0; i < elements.length; i++) {\n      var toRotate = elements[i].getAttribute(\"data-type\");\n      var period = elements[i].getAttribute(\"data-period\");\n\n      if (toRotate) {\n        new TxtType(elements[i], JSON.parse(toRotate), period);\n      }\n    } // INJECT CSS\n\n\n    var css = document.createElement(\"style\");\n    css.type = \"text/css\";\n    css.innerHTML = \".typewrite > .wrap { border-right: 0.15em solid orange}\";\n    document.body.appendChild(css);\n  }, [showDetails]);\n\n  var handleClick = function handleClick() {\n    setShowDetails(true);\n  };\n\n  return __jsx(React.Fragment, null, __jsx(Header, {\n    active: HEADERLINKS.ABOUTME,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }), showDetails ? __jsx(\"div\", {\n    className: \"detail-page-wrapper content-container\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"detail__image\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }\n  }, __jsx(\"img\", {\n    src: \"/profile-pic.png\",\n    alt: \"profile_pic\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  })), __jsx(\"span\", {\n    className: \"detail__backicon\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }\n  }, \"\\u2794\"), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }\n  }, \"I am a software engineer having 2.5 yrs of work experience in Frontend development. I am a software engineer having 2.5 yrs of work experience in Frontend development. I am a software engineer having 2.5 yrs of work experience in Frontend development\"), __jsx(\"div\", {\n    className: \"detail__cta\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  }, __jsx(\"button\", {\n    className: \"btn-cta\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, \"RESUME\"))) : __jsx(\"div\", {\n    className: \"about-page-wrapper\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"about-page__main\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  }, __jsx(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, \"PULKIT NAGPAL\"), __jsx(\"p\", {\n    className: \"typewrite\",\n    \"data-period\": \"1000\",\n    \"data-type\": \"[ \\\"Just Another Frontend Guy\\\", \\\"I Love Javascript !!!\\\" ]\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, __jsx(\"span\", {\n    className: \"wrap\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 15\n    }\n  })), __jsx(\"div\", {\n    className: \"about-page__knowmore\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, __jsx(Button, {\n    text: \"Tap to Know More\",\n    onClick: handleClick,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 15\n    }\n  })))));\n};\n\n_s(AboutMe, \"k7VXnxS1BlhgpajFwoU/kl8phVc=\");\n\n_c = AboutMe;\n\nvar TxtType = function TxtType(el, toRotate, period) {\n  this.toRotate = toRotate;\n  this.el = el;\n  this.loopNum = 0;\n  this.period = parseInt(period, 10) || 2000;\n  this.txt = \"\";\n  this.tick();\n  this.isDeleting = false;\n};\n\n_c2 = TxtType;\n\nTxtType.prototype.tick = function () {\n  var i = this.loopNum % this.toRotate.length;\n  var fullTxt = this.toRotate[i];\n\n  if (this.isDeleting) {\n    this.txt = fullTxt.substring(0, this.txt.length - 1);\n  } else {\n    this.txt = fullTxt.substring(0, this.txt.length + 1);\n  }\n\n  this.el.innerHTML = '<span class=\"wrap\">' + this.txt + \"</span>\";\n  var that = this;\n  var delta = 200 - Math.random() * 100;\n\n  if (this.isDeleting) {\n    delta /= 2;\n  }\n\n  if (!this.isDeleting && this.txt === fullTxt) {\n    delta = this.period;\n    this.isDeleting = true;\n  } else if (this.isDeleting && this.txt === \"\") {\n    this.isDeleting = false;\n    this.loopNum++;\n    delta = 500;\n  }\n\n  setTimeout(function () {\n    that.tick();\n  }, delta);\n};\n\nexport default AboutMe;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"AboutMe\");\n$RefreshReg$(_c2, \"TxtType\");","map":{"version":3,"sources":["/Users/pulkitnagpal/Desktop/personal-projects/portfolio/pages/index.js"],"names":["useEffect","useState","Header","HEADERLINKS","Button","AboutMe","showDetails","setShowDetails","elements","document","getElementsByClassName","i","length","toRotate","getAttribute","period","TxtType","JSON","parse","css","createElement","type","innerHTML","body","appendChild","handleClick","ABOUTME","el","loopNum","parseInt","txt","tick","isDeleting","prototype","fullTxt","substring","that","delta","Math","random","setTimeout"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\nimport Header, { HEADERLINKS } from \"../components/Header\";\nimport Button from \"../components/Button\";\n\nconst AboutMe = () => {\n  const [showDetails, setShowDetails] = useState(false);\n  useEffect(() => {\n    var elements = document.getElementsByClassName(\"typewrite\");\n    for (var i = 0; i < elements.length; i++) {\n      var toRotate = elements[i].getAttribute(\"data-type\");\n      var period = elements[i].getAttribute(\"data-period\");\n      if (toRotate) {\n        new TxtType(elements[i], JSON.parse(toRotate), period);\n      }\n    }\n    // INJECT CSS\n    var css = document.createElement(\"style\");\n    css.type = \"text/css\";\n    css.innerHTML = \".typewrite > .wrap { border-right: 0.15em solid orange}\";\n    document.body.appendChild(css);\n  }, [showDetails]);\n  const handleClick = () => {\n    setShowDetails(true);\n  };\n  return (\n    <>\n      <Header active={HEADERLINKS.ABOUTME} />\n      {showDetails ? (\n        <div className=\"detail-page-wrapper content-container\">\n          <div className=\"detail__image\">\n            <img src=\"/profile-pic.png\" alt=\"profile_pic\" />\n          </div>\n          <span className=\"detail__backicon\">&#10132;</span>\n          <p>\n            I am a software engineer having 2.5 yrs of work experience in\n            Frontend development. I am a software engineer having 2.5 yrs of\n            work experience in Frontend development. I am a software engineer\n            having 2.5 yrs of work experience in Frontend development\n          </p>\n          <div className=\"detail__cta\">\n            {/* <button className=\"btn-cta\" onClick={() => setShowDetails(false)}>BACK</button> */}\n            <button className=\"btn-cta\">RESUME</button>\n          </div>\n        </div>\n      ) : (\n        <div className=\"about-page-wrapper\">\n          <div className=\"about-page__main\">\n            <h1>PULKIT NAGPAL</h1>\n            {/* <p>Just Another Frontend Guy</p> */}\n            <p\n              className=\"typewrite\"\n              data-period=\"1000\"\n              data-type='[ \"Just Another Frontend Guy\", \"I Love Javascript !!!\" ]'\n            >\n              <span className=\"wrap\"></span>\n            </p>\n            <div className=\"about-page__knowmore\">\n              <Button text={\"Tap to Know More\"} onClick={handleClick} />\n            </div>\n          </div>\n        </div>\n      )}\n    </>\n  );\n};\n\nvar TxtType = function (el, toRotate, period) {\n  this.toRotate = toRotate;\n  this.el = el;\n  this.loopNum = 0;\n  this.period = parseInt(period, 10) || 2000;\n  this.txt = \"\";\n  this.tick();\n  this.isDeleting = false;\n};\n\nTxtType.prototype.tick = function () {\n  var i = this.loopNum % this.toRotate.length;\n  var fullTxt = this.toRotate[i];\n\n  if (this.isDeleting) {\n    this.txt = fullTxt.substring(0, this.txt.length - 1);\n  } else {\n    this.txt = fullTxt.substring(0, this.txt.length + 1);\n  }\n\n  this.el.innerHTML = '<span class=\"wrap\">' + this.txt + \"</span>\";\n\n  var that = this;\n  var delta = 200 - Math.random() * 100;\n\n  if (this.isDeleting) {\n    delta /= 2;\n  }\n\n  if (!this.isDeleting && this.txt === fullTxt) {\n    delta = this.period;\n    this.isDeleting = true;\n  } else if (this.isDeleting && this.txt === \"\") {\n    this.isDeleting = false;\n    this.loopNum++;\n    delta = 500;\n  }\n  setTimeout(function () {\n    that.tick();\n  }, delta);\n};\n\nexport default AboutMe;\n"]},"metadata":{},"sourceType":"module"}